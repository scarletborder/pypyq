# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: idl/CodePro.proto
# Protobuf Python Version: 4.25.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11idl/CodePro.proto\",\n\x0e\x43odeProRequest\x12\x0c\n\x04\x63ode\x18\x01 \x01(\t\x12\x0c\n\x04lang\x18\x02 \x01(\t\"8\n\x0b\x43odeProResp\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\x05\x12\r\n\x05\x65xtra\x18\x03 \x01(\t\"/\n\x0f\x44islikedPackage\x12\x0c\n\x04pack\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\x08\"*\n\x0c\x44islikedResp\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\x05\x32h\n\x10\x43odeProProgramer\x12(\n\x07\x43odePro\x12\x0f.CodeProRequest\x1a\x0c.CodeProResp\x12*\n\x07\x44islike\x12\x10.DislikedPackage\x1a\r.DislikedRespB\x10Z\x0epingyingqi/rpcb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'idl.CodePro_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\016pingyingqi/rpc'
  _globals['_CODEPROREQUEST']._serialized_start=21
  _globals['_CODEPROREQUEST']._serialized_end=65
  _globals['_CODEPRORESP']._serialized_start=67
  _globals['_CODEPRORESP']._serialized_end=123
  _globals['_DISLIKEDPACKAGE']._serialized_start=125
  _globals['_DISLIKEDPACKAGE']._serialized_end=172
  _globals['_DISLIKEDRESP']._serialized_start=174
  _globals['_DISLIKEDRESP']._serialized_end=216
  _globals['_CODEPROPROGRAMER']._serialized_start=218
  _globals['_CODEPROPROGRAMER']._serialized_end=322
# @@protoc_insertion_point(module_scope)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from plugins.pypyq.idl import CodePro_pb2 as idl_dot_CodePro__pb2


class CodeProProgramerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CodePro = channel.unary_unary(
            "/CodeProProgramer/CodePro",
            request_serializer=idl_dot_CodePro__pb2.CodeProRequest.SerializeToString,
            response_deserializer=idl_dot_CodePro__pb2.CodeProResp.FromString,
        )
        self.Dislike = channel.unary_unary(
            "/CodeProProgramer/Dislike",
            request_serializer=idl_dot_CodePro__pb2.DislikedPackage.SerializeToString,
            response_deserializer=idl_dot_CodePro__pb2.DislikedResp.FromString,
        )


class CodeProProgramerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CodePro(self, request, context):
        """[Main], CodePro service"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Dislike(self, request, context):
        """全局禁用某个完全匹配字段的包"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CodeProProgramerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CodePro": grpc.unary_unary_rpc_method_handler(
            servicer.CodePro,
            request_deserializer=idl_dot_CodePro__pb2.CodeProRequest.FromString,
            response_serializer=idl_dot_CodePro__pb2.CodeProResp.SerializeToString,
        ),
        "Dislike": grpc.unary_unary_rpc_method_handler(
            servicer.Dislike,
            request_deserializer=idl_dot_CodePro__pb2.DislikedPackage.FromString,
            response_serializer=idl_dot_CodePro__pb2.DislikedResp.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "CodeProProgramer", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class CodeProProgramer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CodePro(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/CodeProProgramer/CodePro",
            idl_dot_CodePro__pb2.CodeProRequest.SerializeToString,
            idl_dot_CodePro__pb2.CodeProResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Dislike(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/CodeProProgramer/Dislike",
            idl_dot_CodePro__pb2.DislikedPackage.SerializeToString,
            idl_dot_CodePro__pb2.DislikedResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
